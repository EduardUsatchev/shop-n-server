apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
      initContainers:
        - name: init-dashboards-dir
          image: busybox
          command:
            - sh
            - -c
            - mkdir -p /var/lib/grafana/dashboards && chown -R 472:472 /var/lib/grafana/dashboards
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image: docker.io/grafana/grafana:12.0.2
          ports:
            - containerPort: 3000
          securityContext:
            runAsUser: 472
            runAsGroup: 472
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: config
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: config
              mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
              subPath: dashboardproviders.yaml
      volumes:
        - name: storage
          emptyDir: {}
        - name: dashboards
          projected:
            sources:
              - configMap:
                  name: my-grafana-dashboard
              - configMap:
                  name: orders-dashboard
        - name: config
          configMap:
            name: grafana
