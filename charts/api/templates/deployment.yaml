apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "5000"
    spec:
      initContainers:
        - name: init-localstack-sqs
          image: python:3.11-slim
          command:
            - /bin/sh
            - -c
            - |
              pip install awscli-local && \
              awslocal sqs create-queue --queue-name {{ .Values.env.SQS_QUEUE_NAME | default "orders-queue" }} --region {{ .Values.env.AWS_REGION | quote }}
          env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.env.AWS_ACCESS_KEY_ID | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.env.AWS_SECRET_ACCESS_KEY | quote }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.env.AWS_REGION | quote }}
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 5000
          env:
            - name: AWS_REGION
              value: {{ .Values.env.AWS_REGION | quote }}
            - name: SQS_QUEUE_URL
              value: {{ .Values.env.SQS_QUEUE_URL | quote }}
            - name: DB_HOST
              value: {{ .Values.env.DB_HOST | quote }}
            - name: DB_USER
              value: {{ .Values.env.DB_USER | quote }}
            - name: DB_PASS
              value: {{ .Values.env.DB_PASS | quote }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.env.AWS_ACCESS_KEY_ID | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.env.AWS_SECRET_ACCESS_KEY | quote }}
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
